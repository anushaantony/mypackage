strsplit1(x, split = ",")
my_function(x, split = ",")
load_all()
load_all()
#> [1] "alfa"    "bravo"   "charlie" "delta"
(x <- "alfa,bravo,charlie,delta")
#> [1] "alfa,bravo,charlie,delta"
strsplit(x, split = ",")
#> [[1]]
#> [1] "alfa"    "bravo"   "charlie" "delta"
strsplit1 <- function(x, split) {
strsplit(x, split = split)[[1]]
}
load_all()
load_all()
load_all()
load_all()
library(devtools)
load_all()
(x <- "alfa,bravo,charlie,delta")
#> [1] "alfa,bravo,charlie,delta"
strsplit1(x, split = ",")
#> [1] "alfa"    "bravo"   "charlie" "delta"
#> â„¹ Loading regexcite
exists("strsplit1", where = globalenv(), inherits = FALSE)
library(devtools)
load_all()
exists("strsplit1", where = globalenv(), inherits = FALSE)
library(regexcite)
install.packages("regexcite")
library(regexcite)
install.packages("regexcite")
library(regexcite)
R.version()
sessionInfo()
use_mit_license()
edit_r_profile()
library(devtools)
load_all()
document()
check()
install()
library(mypackage)
library(mypackage)
#'
#' @param x A character vector with one element.
#' @param split What to split on.
#'
#' @return A character vector.
#' @export
#'
#' @examples
#' x <- "alfa,bravo,charlie,delta"
#' strsplit1(x, split = ",")
strsplit1 <- function(x, split) {
strsplit(x, split = split)[[1]]
}
document()
library(devtools)
document()
document()
check()
check()
check()
check()
install()
library(devtools)
load_all()
check()
check()
check()
check()
check()
getwd()
check()
check()
check()
check()
install()
library("mypackage")
use_testthat()
shinyApp(
ui=fluidPage(
titlePanel("Title Panel"),
sidebarLayout(
sidebarPanel(
helpText("Sidebar Panel")
),
mainPanel(tabsetPanel(
tabPanel("tab1",
fluidRow(
column(6,helpText("Col1")),
column(6,
helpText("Col2"),
fluidRow(
column(4,style="background-color:#b0c6fb",helpText("Col1")),
column(4,style="background-color:#ffa153",helpText("Col2")),
column(4,style="background-color:#b1f6c6",helpText("Col3"))
)
)
)
),
tabPanel("tab2",
inputPanel(helpText("Input Panel"))
),
tabPanel("tab3",
wellPanel(helpText("Well Panel"))
)
)
)
)
),
server=function(input,output) {})
library(shiny)
shinyApp(
ui=fluidPage(
titlePanel("Title Panel"),
sidebarLayout(
sidebarPanel(
helpText("Sidebar Panel")
),
mainPanel(tabsetPanel(
tabPanel("tab1",
fluidRow(
column(6,helpText("Col1")),
column(6,
helpText("Col2"),
fluidRow(
column(4,style="background-color:#b0c6fb",helpText("Col1")),
column(4,style="background-color:#ffa153",helpText("Col2")),
column(4,style="background-color:#b1f6c6",helpText("Col3"))
)
)
)
),
tabPanel("tab2",
inputPanel(helpText("Input Panel"))
),
tabPanel("tab3",
wellPanel(helpText("Well Panel"))
)
)
)
)
),
server=function(input,output) {})
